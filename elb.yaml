AWSTemplateFormatVersion: '2010-09-09'
Description: ALB, Security Groups, Target Group, Listener for ECS

Parameters:
  VPCID:
    Type: String
  PublicSubnet:
    Type: String
  PrivateSubnet:
    Type: String

Resources:

  # ALB Security Group
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP from internet
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: ALBSG

  # ECS Task Security Group
  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP from ALB
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref ALBSecurityGroup
      Tags:
        - Key: Name
          Value: ECSSG

  # Application Load Balancer
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: DevOpsALB
      Subnets:
        - !Ref PublicSubnet
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Scheme: internet-facing
      Type: application
      IpAddressType: ipv4

  # Target Group
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: DevOpsTG
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VPCID
      TargetType: ip
      HealthCheckPath: /
      Matcher:
        HttpCode: 200-399

  # Listener
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

Outputs:
  ALBSecurityGroup:
    Value: !Ref ALBSecurityGroup
  ECSSecurityGroup:
    Value: !Ref ECSSecurityGroup
  LoadBalancerDNS:
    Value: !GetAtt ALB.DNSName
  TargetGroupArn:
    Value: !Ref TargetGroup
